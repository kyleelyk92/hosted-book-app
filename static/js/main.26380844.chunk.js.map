{"version":3,"sources":["BooksAPI.js","ShelfChanger.js","Book2.js","SearchPage.js","BookShelf.js","Homepage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","ShelfChanger","bookShelfChange","BooksAPI","props","updateLibrary","this","shelfClass","title","pageCount","className","defaultValue","onChange","e","target","value","disabled","React","Component","Book","bookImage","imageLinks","thumbnail","key","style","width","height","backgroundImage","authors","map","author","SearchPage","state","bookSearch","error","updateSearch","length","response","setState","responseArray","forEach","prevState","savedBooks","to","type","placeholder","bookObj","find","b","currentShelf","bookList","Bookshelf","destination","divName","Homepage","BooksApp","bookArray","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.26380844.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from \"react\";\r\n\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nexport default class ShelfChanger extends React.Component {\r\n  bookShelfChange = (shelf, book) => {\r\n    book.shelf = `${shelf}`;\r\n    BooksAPI.update(book, shelf).then(() => this.props.updateLibrary());\r\n  };\r\n\r\n  render() {\r\n    const { shelfClass, book, shelf } = this.props;\r\n\r\n    return (\r\n      <div\r\n        id={`${book.title}${book.pageCount}`}\r\n        className={`book-shelf-changer ${shelfClass}`}\r\n      >\r\n        <select\r\n          defaultValue={shelf}\r\n          onChange={e => this.bookShelfChange(e.target.value, book)}\r\n        >\r\n          <option value=\"move\" disabled>\r\n            Move to...\r\n          </option>\r\n          <option value=\"currentlyReading\">Currently Reading</option>\r\n          <option value=\"wantToRead\">Want to Read</option>\r\n          <option value=\"read\">Read</option>\r\n          <option value=\"none\">None</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ShelfChanger from \"./ShelfChanger\";\r\n\r\nexport default function Book({ book, updateLibrary, shelfClass, shelf }) {\r\n  const noCoverImage = \"http://myweekend.in/img/noImageFound.jpg\";\r\n  const bookImage =\r\n    book.imageLinks && book.imageLinks.thumbnail\r\n      ? book.imageLinks.thumbnail\r\n      : noCoverImage;\r\n\r\n  switch (shelf) {\r\n    case \"none\":\r\n      shelfClass = \"none\";\r\n      break;\r\n    case \"wantToRead\":\r\n      shelfClass = \"want-to-read\";\r\n      break;\r\n    case \"read\":\r\n      shelfClass = \"read\";\r\n      break;\r\n    case \"currentlyReading\":\r\n      shelfClass = \"currently-reading\";\r\n      break;\r\n    default:\r\n      shelfClass = \"none\";\r\n  }\r\n\r\n  const title = book.title ? book.title : \"No title available\";\r\n  return (\r\n    <li key={Math.random() + book.title}>\r\n      <div className=\"book\">\r\n        <div className=\"book-top\">\r\n          <div\r\n            className={`\"book-cover\"`}\r\n            style={{\r\n              width: 128,\r\n              height: 188,\r\n              backgroundImage: `url(\"${bookImage}\")`\r\n            }}\r\n          />\r\n          <ShelfChanger\r\n            shelf={shelf}\r\n            shelfClass={shelfClass}\r\n            updateLibrary={updateLibrary}\r\n            book={book}\r\n          />\r\n        </div>\r\n        <div className=\"book-title\">{title}</div>\r\n        <div className=\"book-authors\">\r\n          {book.authors &&\r\n            book.authors.map(author => {\r\n              return <span key={author}>{author}</span>;\r\n            })}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport Book2 from \"./Book2\";\r\n\r\nexport default class SearchPage extends React.Component {\r\n  state = { query: \"\", bookSearch: [], error: false };\r\n\r\n  updateSearch = value => {\r\n    if (value.length > 0) {\r\n      BooksAPI.search(value)\r\n        .then(response => {\r\n          this.setState({\r\n            bookSearch: [],\r\n            error: false\r\n          });\r\n          return response;\r\n        })\r\n        .then(responseArray => {\r\n          responseArray.length > 0 &&\r\n            responseArray.forEach(book => {\r\n              this.setState(prevState => {\r\n                return {\r\n                  bookSearch: [...prevState.bookSearch, book],\r\n                  error: false\r\n                };\r\n              });\r\n            });\r\n        })\r\n        .then(() => {\r\n          if (this.state.bookSearch.length === 0) {\r\n            this.setState({ error: true });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { savedBooks } = this.props;\r\n    return (\r\n      <div>\r\n        <div className=\"search-books\">\r\n          <div className=\"search-books-bar\">\r\n            <Link className=\"close-search\" to=\"/\">\r\n              Close\r\n            </Link>\r\n            <div className=\"search-books-input-wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                onChange={e => this.updateSearch(e.target.value)}\r\n                placeholder=\"Search by title or author\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n              {this.state.bookSearch.map(bookObj => {\r\n                let book =\r\n                  savedBooks.find(b => {\r\n                    if (b.id === bookObj.id) {\r\n                      return b;\r\n                    }\r\n                  }) || bookObj;\r\n\r\n                let currentShelf = book.shelf;\r\n                return (\r\n                  <Book2\r\n                    bookList={this.state.bookSearch}\r\n                    shelfClass={book.shelf}\r\n                    shelf={currentShelf || \"none\"}\r\n                    book={book}\r\n                    updateLibrary={this.props.updateLibrary}\r\n                  />\r\n                );\r\n              })}\r\n            </ol>\r\n            {this.state.error && (\r\n              <div>No results found, try a different search term</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Book2 from \"./Book2\";\r\nexport default function Bookshelf(props) {\r\n  let {\r\n    bookSearch,\r\n    bookList,\r\n    destination = \"null\",\r\n    updateLibrary,\r\n    shelfClass,\r\n    search,\r\n    divName\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"list-books\">\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{divName}</h2>\r\n            <div className=\"bookshelf-books\">\r\n              <ol className=\"books-grid\">\r\n                {props.bookList.map(b => {\r\n                  if (b.shelf === destination) {\r\n                    return (\r\n                      <Book2\r\n                        book={b}\r\n                        destination={destination}\r\n                        updateLibrary={updateLibrary}\r\n                        shelfClass={shelfClass}\r\n                        shelf={b.shelf}\r\n                        search={search}\r\n                      />\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book2 from \"./Book2\";\r\nimport BookShelf from \"./BookShelf\";\r\n\r\nexport default class Homepage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Link className=\"open-search\" to=\"/search\">\r\n          <button>+</button>\r\n        </Link>\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>My Reads</h1>\r\n          </div>\r\n        </div>\r\n        <BookShelf\r\n          bookList={this.props.bookList}\r\n          destination=\"currentlyReading\"\r\n          divName=\"Currently Reading\"\r\n          updateLibrary={this.props.updateLibrary}\r\n          shelfClass=\"currently-reading\"\r\n          search={false}\r\n        />\r\n        {/* <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>My Reads</h1>\r\n          </div>\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {this.props.bookList.map(b => {\r\n                      if (b.shelf === \"currentlyReading\") {\r\n                        return (\r\n                          <Book2\r\n                            shelf={b.shelf}\r\n                            shelfClass={\"currently-reading\"}\r\n                            book={b}\r\n                            updateLibrary={this.props.updateLibrary}\r\n                          />\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        <BookShelf\r\n          bookList={this.props.bookList}\r\n          destination=\"wantToRead\"\r\n          divName=\"Want to read\"\r\n          updateLibrary={this.props.updateLibrary}\r\n          shelfClass=\"want-to-read\"\r\n          search={false}\r\n        />\r\n        {/* <div className=\"list-books\">\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">Want To Read</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {this.props.bookList.map(b => {\r\n                      if (b.shelf === \"wantToRead\") {\r\n                        return (\r\n                          <Book2\r\n                            bookList={this.props.bookList}\r\n                            shelf={b.shelf}\r\n                            shelfClass={\"want-to-read\"}\r\n                            book={b}\r\n                            updateLibrary={this.props.updateLibrary}\r\n                          />\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n        <BookShelf\r\n          bookList={this.props.bookList}\r\n          destination=\"read\"\r\n          divName=\"Read\"\r\n          updateLibrary={this.props.updateLibrary}\r\n          shelfClass=\"read\"\r\n          search={false}\r\n        />\r\n        {/* <div className=\"list-books\">\r\n          <div className=\"list-books-content\">\r\n            <div>\r\n              <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">Read</h2>\r\n                <div className=\"bookshelf-books\">\r\n                  <ol className=\"books-grid\">\r\n                    {this.props.bookList.map(b => {\r\n                      if (b.shelf === \"read\") {\r\n                        return (\r\n                          <Book2\r\n                            shelf={b.shelf}\r\n                            shelfClass={\"read\"}\r\n                            book={b}\r\n                            updateLibrary={this.props.updateLibrary}\r\n                          />\r\n                        );\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// <div className=\"app\">\r\n{\r\n  /* <>\r\n                <div>This is where the homepage will go</div>\r\n                <Link to=\"/search\">Go to search page</Link>\r\n\r\n                \r\n                      <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                          <ol className=\"books-grid\">\r\n                            \r\n                            <li>\r\n                              <div className=\"book\">\r\n                                <div className=\"book-top\">\r\n                                  <div\r\n                                    className=\"book-cover\"\r\n                                    style={{\r\n                                      width: 128,\r\n                                      height: 192,\r\n                                      backgroundImage:\r\n                                        'url(\"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\")'\r\n                                    }}\r\n                                  />\r\n                                  <div className=\"book-shelf-changer\">\r\n                                    <select>\r\n                                      <option value=\"move\" disabled>\r\n                                        Move to...\r\n                                      </option>\r\n                                      <option value=\"currentlyReading\">\r\n                                        Currently Reading\r\n                                      </option>\r\n                                      <option value=\"wantToRead\">\r\n                                        Want to Read\r\n                                      </option>\r\n                                      <option value=\"read\">Read</option>\r\n                                      <option value=\"none\">None</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"book-title\">\r\n                                  Harry Potter and the Sorcerer's Stone\r\n                                </div>\r\n                                <div className=\"book-authors\">J.K. Rowling</div>\r\n                              </div>\r\n                            </li>\r\n                          </ol>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"bookshelf\">\r\n                        <h2 className=\"bookshelf-title\">Read</h2>\r\n                        <div className=\"bookshelf-books\">\r\n                          <ol className=\"books-grid\">\r\n                            <li>\r\n                              <div className=\"book\">\r\n                                <div className=\"book-top\">\r\n                                  <div\r\n                                    className=\"book-cover\"\r\n                                    style={{\r\n                                      width: 128,\r\n                                      height: 192,\r\n                                      backgroundImage:\r\n                                        'url(\"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\")'\r\n                                    }}\r\n                                  />\r\n                                  <div className=\"book-shelf-changer\">\r\n                                    <select>\r\n                                      <option value=\"move\" disabled>\r\n                                        Move to...\r\n                                      </option>\r\n                                      <option value=\"currentlyReading\">\r\n                                        Currently Reading\r\n                                      </option>\r\n                                      <option value=\"wantToRead\">\r\n                                        Want to Read\r\n                                      </option>\r\n                                      <option value=\"read\">Read</option>\r\n                                      <option value=\"none\">None</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"book-title\">The Hobbit</div>\r\n                                <div className=\"book-authors\">\r\n                                  J.R.R. Tolkien\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n                            <li>\r\n                              <div className=\"book\">\r\n                                <div className=\"book-top\">\r\n                                  <div\r\n                                    className=\"book-cover\"\r\n                                    style={{\r\n                                      width: 128,\r\n                                      height: 174,\r\n                                      backgroundImage:\r\n                                        'url(\"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\")'\r\n                                    }}\r\n                                  />\r\n                                  <div className=\"book-shelf-changer\">\r\n                                    <select>\r\n                                      <option value=\"move\" disabled>\r\n                                        Move to...\r\n                                      </option>\r\n                                      <option value=\"currentlyReading\">\r\n                                        Currently Reading\r\n                                      </option>\r\n                                      <option value=\"wantToRead\">\r\n                                        Want to Read\r\n                                      </option>\r\n                                      <option value=\"read\">Read</option>\r\n                                      <option value=\"none\">None</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"book-title\">\r\n                                  Oh, the Places You'll Go!\r\n                                </div>\r\n                                <div className=\"book-authors\">Seuss</div>\r\n                              </div>\r\n                            </li>\r\n                            <li>\r\n                              <div className=\"book\">\r\n                                <div className=\"book-top\">\r\n                                  <div\r\n                                    className=\"book-cover\"\r\n                                    style={{\r\n                                      width: 128,\r\n                                      height: 192,\r\n                                      backgroundImage:\r\n                                        'url(\"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\")'\r\n                                    }}\r\n                                  />\r\n                                  <div className=\"book-shelf-changer\">\r\n                                    <select>\r\n                                      <option value=\"move\" disabled>\r\n                                        Move to...\r\n                                      </option>\r\n                                      <option value=\"currentlyReading\">\r\n                                        Currently Reading\r\n                                      </option>\r\n                                      <option value=\"wantToRead\">\r\n                                        Want to Read\r\n                                      </option>\r\n                                      <option value=\"read\">Read</option>\r\n                                      <option value=\"none\">None</option>\r\n                                    </select>\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"book-title\">\r\n                                  The Adventures of Tom Sawyer\r\n                                </div>\r\n                                <div className=\"book-authors\">Mark Twain</div>\r\n                              </div>\r\n                            </li>\r\n                          </ol>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"open-search\">\r\n                    <button\r\n                      onClick={() => this.setState({ showSearchPage: true })}\r\n                    >\r\n                      Add a book\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n      </> */\r\n}\r\n","import React from \"react\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\nimport { Route, Link } from \"react-router-dom\";\r\nimport SearchPage from \"./SearchPage\";\r\nimport Homepage from \"./Homepage\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = { savedBooks: [] };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(bookArray =>\r\n      this.setState({ savedBooks: bookArray })\r\n    );\r\n  }\r\n  updateLibrary = () => {\r\n    BooksAPI.getAll().then(bookArray =>\r\n      this.setState({ savedBooks: bookArray })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => {\r\n            return (\r\n              <SearchPage\r\n                savedBooks={this.state.savedBooks}\r\n                updateLibrary={this.updateLibrary}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Route\r\n          path=\"/\"\r\n          exact\r\n          render={() => {\r\n            return (\r\n              <Homepage\r\n                bookList={this.state.savedBooks}\r\n                updateLibrary={this.updateLibrary}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}